- name: Set file descriptor limits required by GLUU
  blockinfile:
    path: /etc/security/limits.conf
    insertbefore: '# End of file'
    block: |
      soft nofile 65536
      hard nofile 262144

- name: Add Gluu repo
  copy:
    src: Gluu-centos7.repo
    dest: /etc/yum.repos.d/Gluu-centos7.repo

- name: Install Gluu
  yum:
    pkg: gluu-server-3.1.3
    state: present

- name: Enable Gluu
  command: /sbin/gluu-serverd-3.1.3 enable

- name: Start Gluu
  command: /sbin/gluu-serverd-3.1.3 start

- name: Wait for Gluu container to launch
  wait_for:
    port: 60022

- name: Make sure Ansible can log into the Gluu chroot via locahost
  shell: cat /root/.ssh/authorized_keys >> /opt/gluu-server-3.1.3/root/.ssh/authorized_keys

# The commands below run within the Gluu chroot environment

- name: Check to see if install has already been run
  stat:
    path: /install/community-edition-setup/setup.log
  register: gluuInstallLog
  delegate_to: gluuContainer

- name: Set installed flag
  set_fact:
    gluuInstalled: "{{ gluuInstallLog.stat.exists }}"

- name: Send Gluu setup properties
  copy:
    src: setup.properties
    dest: /install/community-edition-setup/setup.properties
  delegate_to: gluuContainer
  when: gluuInstalled == False

- name: Run setup
  command: /install/community-edition-setup/setup.py -nf /install/community-edition-setup/setup.properties
  args:
    chdir: /install/community-edition-setup/
  delegate_to: gluuContainer
  when: gluuInstalled == False

- name: Delete setup properties
  file:
    path: /install/community-edition-setup/{{ item }}
    state: absent
  with_items:
    - setup.properties
    - setup.properties.last
  delegate_to: gluuContainer

- name: Wait for webserver to come up
  uri:
    url: "https://spade/identity"
    status_code: 200
    validate_certs: no
  register: response_code
  until: response_code.status == 200
  retries: 60
  delegate_to: localhost

- name: Check if auth is already configured
  shell: python3 check_auth.py
  args:
    chdir: "{{ role_path }}/files"
  delegate_to: localhost
  register: authConfigured
  ignore_errors: yes

- name: Integrate Gluu with Active Directory - cache refresh
  shell: python3 cache_refresh.py
  args:
    chdir: "{{ role_path }}/files"
  delegate_to: localhost
  when: authConfigured.rc == 1

- name: Integrate Gluu with Active Directory - add AD as auth
  shell: python3 add_auth_server.py
  args:
    chdir: "{{ role_path }}/files"
  delegate_to: localhost
  when: authConfigured.rc == 1

- name: Reboot host
  command: reboot
  async: 0
  poll: 0
  ignore_errors: true
  when: authConfigured.rc == 1
